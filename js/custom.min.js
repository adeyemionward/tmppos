jQuery(window).on("load", function() {
    $('#preloader').fadeOut(500);
    $('#main-wrapper').addClass('show');

     if($('body').attr('data-sidebar-position') === "fixed") {
       $('.quixnav-scroll').slimscroll({
             position: "right",
             size: "5px",
            height: "100%",
           color: "transparent"
         });
 }
});

(function($) {
    "use strict";

    $("#menu").metisMenu();

    // $(function() {
    //     AOS.init({
    //         duration: 1500,
    //         easing: 'ease-in-out',
    //     });
    // });

    $("#checkAll").change(function() {
        $("td input:checkbox").prop('checked', $(this).prop("checked"));
    });





    // $('.sidebar-right-inner').slimscroll({
    //     // position: "left",
    //     size: "5px",
    //     height: "100%",
    //     color: "#c6c8c9"
    // });




    $(".toggle").on('click', function() {

        $('#wizard').toggle();
        $('#step-wizard').toggle();
        Noti({
            status: 'danger',
            content: 'You have changed sales settings',
            timer: 4000,
            animation: true,
            progress: true,
            bgcolor: 'linear-gradient(60deg,#3866ff,#38c0ff)',
            icon: 'show'
        });
       
    });













    $(".nav-control").on('click', function() {

        $('#main-wrapper').toggleClass("menu-toggle");
        $('#quixnav').toggle();
        $('#topmenu').toggle();
        $(".hamburger").toggleClass("is-active");

    });

    //to keep the current page active
    $(function() {
        for (var nk = window.location,
                o = $("ul#menu a").filter(function() {
                    return this.href == nk;
                })
                .addClass("mm-active")
                .parent()
                .addClass("mm-active");;) {
            // console.log(o)
            if (!o.is("li")) break;
            o = o.parent()
                .addClass("mm-show")
                .parent()
                .addClass("mm-active");
        }




        $("ul#menu>li").on('click', function() {
            const sidebarStyle = $('body').attr('data-sidebar-style');
            if (sidebarStyle === 'mini') {
                console.log($(this).find('ul'))
                $(this).find('ul').stop()
            }
        })
    });

    $(function() {
        // var win_w = window.outerWidth;
        var win_h = window.outerHeight;
        var win_h = window.outerHeight;
        if (win_h > 0 ? win_h : screen.height) {
            $(".content-body").css("min-height", (win_h + 60) + "px");
        };
    });


    $('a[data-action="collapse"]').on("click", function(i) {
        i.preventDefault(),
            $(this).closest(".card").find('[data-action="collapse"] i').toggleClass("mdi-arrow-down mdi-arrow-up"),
            $(this).closest(".card").children(".card-body").collapse("toggle");
    });

    $('a[data-action="expand"]').on("click", function(i) {
        i.preventDefault(),
            $(this).closest(".card").find('[data-action="expand"] i').toggleClass("icon-size-actual icon-size-fullscreen"),
            $(this).closest(".card").toggleClass("card-fullscreen");
    });



    $('[data-action="close"]').on("click", function() {
        $(this).closest(".card").removeClass().slideUp("fast");
    });

    $('[data-action="reload"]').on("click", function() {
        var e = $(this);
        e.parents(".card").addClass("card-load"),
            e.parents(".card").append('<div class="card-loader"><i class=" ti-reload rotate-refresh"></div>'),
            setTimeout(function() {
                e.parents(".card").children(".card-loader").remove(),
                    e.parents(".card").removeClass("card-load")
            }, 2000)
    });

    const headerHight = $('.header').innerHeight();

    $(window).scroll(function() {
        if ($('body').attr('data-layout') === "horizontal" && $('body').attr('data-header-position') === "static" && $('body').attr('data-sidebar-position') === "fixed")
            $(this.window).scrollTop() >= headerHight ? $('.quixnav').addClass('fixed') : $('.quixnav').removeClass('fixed')
    });

    // $('.sidebar-right-trigger').on('click', function() {
    //     $('.sidebar-right').toggleClass('show');
    // });

})(jQuery);

const qs = new PerfectScrollbar('.quixnav-scroll');
// const sr = new PerfectScrollbar('.sidebar-right-inner');


//plugin bootstrap minus and plus
$('.btn-number').on('click', function(e) {
    e.preventDefault();

    fieldName = $(this).attr('data-field');
    type = $(this).attr('data-type');
    var input = $("input[name='" + fieldName + "']");
    var currentVal = parseInt(input.val());
    if (!isNaN(currentVal)) {
        if (type == 'minus')
            input.val(currentVal - 1);
        else if (type == 'plus')
            input.val(currentVal + 1);
    } else {
        input.val(0);
    }
});





    $(document).ready(function () {
        $('.nav-tabs > li a[title]').tooltip();
        
        //Wizard
        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
    
            var target = $(e.target);
        
            if (target.parent().hasClass('disabled')) {
                return false;
            }
        });
    
        $(".next-step").click(function (e) {
    
            var active = $('.wizard .nav-tabs li.active');
            active.next().removeClass('disabled');
            nextTab(active);
    
        });
        $(".prev-step").click(function (e) {
    
            var active = $('.wizard .nav-tabs li.active');
            prevTab(active);
    
        });
    });
    
    function nextTab(elem) {
        $(elem).next().find('a[data-toggle="tab"]').click();
    }
    function prevTab(elem) {
        $(elem).prev().find('a[data-toggle="tab"]').click();
    }
    
    
    $('.nav-tabs').on('click', 'li', function() {
        $('.nav-tabs li.active').removeClass('active');
        $(this).addClass('active');
    });
    
    
    




    function checkButton() {
        if (document.getElementById('cash').checked) {
            document.getElementById("posoption").style.display = "none";
            document.getElementById("transferoption").style.display = "none";
            document.getElementById("multipleoption").style.display = "none";;
        }
        else if (document.getElementById('transfer').checked) {
            document.getElementById("transferoption").style.display = "block";
            document.getElementById("posoption").style.display = "none";
            document.getElementById("multipleoption").style.display = "none";
        }
        else if (document.getElementById('pos').checked) {
            document.getElementById("posoption").style.display = "block";
            document.getElementById("transferoption").style.display = "none";
            document.getElementById("multipleoption").style.display = "none";
        }
        else if (document.getElementById('multiple').checked) {
            document.getElementById("posoption").style.display = "none";
            document.getElementById("transferoption").style.display = "none";
            document.getElementById("multipleoption").style.display = "block";
        }
        else {
            document.getElementById("error").innerHTML
                = "You have not selected any season";
        }
    }


    function checkPartPayment() {
        if (document.getElementById('partlycash').selected) {
            document.getElementById("partlyposoption").style.display = "none";
            document.getElementById("partlytransferoption").style.display = "none";
            document.getElementById('partlycashTwo').style.display = "none";
            document.getElementById("partlytransferTwo").style.display = "block";
            document.getElementById("partlyposTwo").style.display = "block";
        }
        else if (document.getElementById('partlytransfer').selected) {
            document.getElementById("partlytransferoption").style.display = "block";
            document.getElementById("partlyposoption").style.display = "none";
            document.getElementById("partlytransferTwo").style.display = "none";
            document.getElementById("partlyposTwo").style.display = "block";
            document.getElementById('partlycashTwo').style.display = "block";
        }
        else if (document.getElementById('partlypos').selected) {
            document.getElementById("partlyposoption").style.display = "block";
            document.getElementById("partlytransferoption").style.display = "none";
            document.getElementById("partlyposTwo").style.display = "none";
            document.getElementById("partlytransferTwo").style.display = "block";
            document.getElementById('partlycashTwo').style.display = "block";
        }
        
        else {
            document.getElementById("error").innerHTML
                = "You have not selected any season";
        }
    } 

    function checkPartPaymentTwo() {
        if (document.getElementById('partlycashTwo').selected) {
            document.getElementById("partlyposoptionTwo").style.display = "none";
            document.getElementById("partlytransferoptionTwo").style.display = "none";
        }
        else if (document.getElementById('partlytransferTwo').selected) {
            document.getElementById("partlytransferoptionTwo").style.display = "block";
            document.getElementById("partlyposoptionTwo").style.display = "none";
        }
        else if (document.getElementById('partlyposTwo').selected) {
            document.getElementById("partlyposoptionTwo").style.display = "block";
            document.getElementById("partlytransferoptionTwo").style.display = "none";
        }
        
        else {
            
            document.getElementById("error").innerHTML
                = "You have not selected any season";
        }
    } 




      const priceInput = document.querySelector('[name=price]');
            const quantityInput = document.querySelector('[name=quantity]');
            const total = document.querySelector('.total');
            const deduct = document.querySelector('.deduct');
            const amount= document.getElementById('amount');
            const sum= document.getElementById('sum');
            const amount1= document.getElementById('amount1');
            const balance = document.querySelector('.balance');
            const quantityLabel = document.querySelector('.quantity-label');




            function calculateTotal() {
                const price = priceInput.value;
                const sumTotal = total.value;

                const pricing = sumTotal / price;
                console.log(pricing);
                quantityInput.value = pricing.toFixed(2);
            }

            // create functions we'll need
            function calculateCost() {
                const price = priceInput.value;
                const quantity = quantityInput.value;
                const cost = price * quantity;
                console.log(cost);
                total.value = cost.toFixed(2);
                amount.innerHTML = '₦'+total.value;
                amount1.innerHTML = '₦'+total.value;
                sum.innerHTML = '₦'+total.value;
            }

            function updateQuantityLabel() {
                const quantity = quantityInput.value;
                quantityLabel.innerText = quantity;

            }

            function partpay() {
                const sumTotal = total.value;
                const partPayment = deduct.value


                const part = sumTotal - partPayment;
                console.log(part);
                if(part<=0){
                    document.getElementById("multipleoption").style.display = "none";
               setInterval(function(){
                $("#error").fadeIn();
                $("#error").fadeOut(1500);
               })
               document.getElementById("error").style.display = "none";
             }
                balance.value = part;
            }

            // on first run
            calculateCost();
            // add event listeners
            priceInput.addEventListener('input', calculateCost);
            quantityInput.addEventListener('input', calculateCost);
            quantityInput.addEventListener('input', updateQuantityLabel);
            total.addEventListener('input', calculateTotal);
            deduct.addEventListener('input', partpay);
            balance.addEventListener('input', partpay);

























              function Noti({ content, status, animation = true, timer = 4000, progress = true, bgcolor, icon = 'show' }) {
            if (timer > 10000) {
                timer = 4000;
            }
            var status = status;
            var main_page= document.getElementById('main-wrapper')
            var Noti_container = document.createElement('div');
            var Noti_alert = document.createElement('div');
            var timer_progress = document.createElement('div');
            Noti_container.setAttribute('id', 'Noti_container');
            document.body.appendChild(Noti_container);
            document.getElementById('Noti_container').appendChild(Noti_alert);
            timer_progress.setAttribute('class', 'timer_progress');
            if (progress != false) {
                document.querySelector('#Noti_container').appendChild(timer_progress);
            }
            if (animation == true) {
                Noti_alert.style = `
                -webkit-animation: 1s Noti_animation;
            animation: 1s Noti_animation;
            display: flex;
            flex-direction: row-reverse;
            align-items: center;
            justify-content: space-between;
            cursor: pointer;
            background: ${bgcolor}
            `;
            } else {
                Noti_alert.style = `
            display: flex;
            flex-direction: row-reverse;
            align-items: center;
            justify-content: space-between;
            cursor: pointer;
            background: ${bgcolor}
            `;
            }
            Noti_alert.addEventListener('click', function () {
                this.remove();
                timer_progress.remove();
            });
            const noti_destroy = function () {
                document.getElementById('Noti_container').removeChild(Noti_alert);
                timer_progress.remove();
            }
            var timeout = setTimeout(() => {
                noti_destroy();
            }, timer);
            Noti_alert.onmouseover = function () {
                clearTimeout(timeout);
                timer_progress.style.animationPlayState = 'paused';
                this.onmouseleave = function () {
                    setTimeout(noti_destroy, timer);
                    timer_progress.style.animationPlayState = 'running';
                }
            };
            switch (status) {
                case 'success':
                    Noti_alert.setAttribute('class', 'Noti_success');
                    icon == 'show' || icon == '' ?
                        Noti_alert.innerHTML = "<ion-icon name='checkmark-circle'></ion-icon>" + "<span>" + content + "</span>"
                        :
                        Noti_alert.innerHTML = content;
                    break;
                case 'warning':
                    Noti_alert.setAttribute('class', 'Noti_warning');
                    icon == 'show' || icon == '' ?
                        Noti_alert.innerHTML = "<ion-icon name='warning'></ion-icon>" + "<span>" + content + "</span>"
                        :
                        Noti_alert.innerHTML = content;
                    break;
                case 'danger':
                    Noti_alert.setAttribute('class', 'Noti_danger');
                    icon == 'show' || icon == '' ?
                        Noti_alert.innerHTML = "<ion-icon name='close-circle'></ion-icon>" + "<span>" + content + "</span>"
                        :
                        Noti_alert.innerHTML = content;
                    break;
                default:
                    Noti_alert.setAttribute('class', 'Noti_success');
                    Noti_alert.innerHTML = "<ion-icon name='checkmark-circle'></ion-icon>" + "<span>" + content + "</span>";
                    break;
            }
            var new_timer_mode = '';
            switch (timer) {
                case 1000:
                    new_timer_mode = '1s';
                    break;
                case 2000:
                    new_timer_mode = '2s';
                    break;
                case 3000:
                    new_timer_mode = '3s';
                    break;
                case 4000:
                    new_timer_mode = '4s';
                    break;
                case 5000:
                    new_timer_mode = '5s';
                    break;
                case 6000:
                    new_timer_mode = '6s';
                    break;
                case 7000:
                    new_timer_mode = '7s';
                    break;
                case 8000:
                    new_timer_mode = '8s';
                    break;
                case 9000:
                    new_timer_mode = '9s';
                    break;
                case 10000:
                    new_timer_mode = '10s';
                    break;
                default:
                    new_timer_mode = '4s';
            }
            timer_progress.style.animation = `${new_timer_mode} timer_progress_animation`;
            timer_progress.style.webkitAnimation = `${new_timer_mode} timer_progress_animation`;
        }
        function success() {
            
            Noti({
                status: 'success',
                content: 'Sale has been Posted',
                timer: 3000,
                animation: true,
                progress: true,
            }

            );
            
            
        }
        function redirect() {
           
            document.getElementById("retail").reset();
           document.getElementById("main-wrapper").style.display = "block";
            document.getElementById("invoice-POS").style.display = "none";

            
        }
        function danger() {
            Noti({
                status: 'danger',
                content: 'Error message',
                timer: 5000,
                animation: true,
                progress: true
            });
        }

        // custom background
        function custombg1() {
            Noti({
                status: 'success',
                content: 'Success message',
                timer: 4000,
                animation: true,
                progress: true,
                bgcolor: '#4f70ff',
                icon: 'show'
            });
        }
        function custombg2() {
            Noti({
                status: 'danger',
                content: 'Success message',
                timer: 4000,
                animation: true,
                progress: true,
                bgcolor: '#ff66b3',
                icon: 'show'
            });
        }
        function custombg3() {
            Noti({
                status: 'success',
                content: 'Success message',
                timer: 74000,
                animation: true,
                progress: true,
                bgcolor: 'linear-gradient(60deg,#3866ff,#38c0ff)',
                icon: 'show'
            });
        }
        function custombg4() {
            Noti({
                status: 'danger',
                content: 'danger message',
                timer: 7000,
                animation: true,
                progress: true,
                bgcolor: 'linear-gradient(60deg,#ff2c2c,#ff9564)',
                icon: 'show'
            });
        }
        function custombg5() {
            Noti({
                status: 'success',
                content: 'Sales has been uploaded succesfull',
                timer: 4000,
                animation: true,
                progress: true,
                bgcolor: 'linear-gradient(60deg,#00ad34,#0ee4c7)',
                icon: 'show'
            });
        }


function viewlocal(){
    document.getElementById("main-wrapper").style.display = "none";
    document.getElementById("invoice-POS").style.display = "none";
    document.getElementById("show").style.display = "block";
}




        let submitBtn = document.querySelector('#submitBtn');
console.log("submit btn : " + submitBtn);



// setting local storage

function setLocalStorage() {

    if (localStorage.getItem('userData')) {
        let showDiv = document.querySelector('#show');
        showDiv.innerHTML = "";
        console.log("i am from get item on local storage")
        let arr = JSON.parse(localStorage.getItem('userData'));
        console.log(arr);
        arr.forEach((user, id) => {
            let newDiv = document.createElement('div');
            let htmlData = `
        Mr/Mrs ${user.customer.name} with the phone: ${user.customer.phone} bought: ${user.items[0].quantity}kg of gas at 
        ₦${user.items[0].amount} and paid with ${user.payments[0].method}
      
        `;
            newDiv.insertAdjacentHTML('afterbegin', htmlData);
            showDiv.insertAdjacentElement('afterbegin', newDiv)
        });


    } else {
        let arr = [];
        let arrData = {
            action: "retail_sales_post",
            user_id: 41,
            station_id: 14,
            token: "411676438756sFyL4Ntbdo9PvYjOhQq86WuEBi53VnmZIzJX1R",
            date: "2023-01-27",
            time: "12:19",
            invoice: "",
            shift_id:  	257725,
           customer: {
                name:"",
                phone: "",
             }
    ,      items: [
          {
            product_id: 461,
            dispenser_id: 298,
            rate: 150.00,
            quantity: quantity,
            amount: amount
          }
    ],
    payments: [
        {
            method: "",
            account_id: 1324,
            amount: 1000.00
        }
    ],
    total: 600.00,
    paid: 1000.00,
    change: 400.00
};
        arr.push(arrData);
        localStorage.setItem('userData', JSON.stringify(arr));
        console.log("data pushed successfully ");
       

    }
}
setTimeout(() => {
    setLocalStorage();
}, 2);


// CRUD operation 
// on submit event default
submitBtn.addEventListener('click', (e) => {
    
        // getting data from local storage 
    let arr = JSON.parse(localStorage.getItem('userData'));
    // getting input form input fields
    let name = document.querySelector("#name").value;
    let phone = document.querySelector("#phone").value;
    let quantity = document.querySelector("#quantity").value;
    let amount = total.value;
    let mode_payment = document.querySelector('input[name=mode_payment]:checked').value;

    // push it into arr
    if (name.length <= 0 && phone.length <= 0) {
        alert("enter user name or phone")

    } else if (name.length > 0 && phone.length > 0) {
        let arrData = {
            action: "retail_sales_post",
            user_id: 616,
            station_id: 14,
            token: "6161677413206X3Mk6Kwp2CvH1NBLGJsueoWUmVnQhr58bEygS",
            date: "2023-01-27",
            time: "14:19",
            invoice: "",
            shift_id: "257725",
           customer:{
            name: name,
            phone: phone,

           }, items: [
            {
              product_id: "461",
              dispenser_id: "298",
              rate: 150.00,
              quantity: quantity,
             amount:amount,
            
        }
    ],
    payments: [
        {
            method: mode_payment,
            account_id: 1324,
            amount: amount
        }
    ],
    total:amount,
    paid: 1000.00,
    change: 400.00
};
        arr.push(arrData);
        localStorage.setItem('userData', JSON.stringify(arr));
        console.log("userData added succesfully ")
        setLocalStorage();
        alert("added succesfully");
        e.preventDefault();
        
        document.getElementById("main-wrapper").style.display = "none";
        document.getElementById("invoice-POS").style.display = "block";
        
        Noti({
            status: 'success',
            content: 'Sale has been Posted',
            timer: 3000,
            animation: true,
            progress: true,
        }) ;
          
          
    
                
    } else {
        alert("enter something")
    }


})


  function printreciept(){
    var prtbtn = document.getElementById("print-btn");
    prtbtn.style.visibility = 'hidden';
    window.print()
    prtbtn.style.visibility = 'visible';
  }

  $(document).ready(function () {

    var navListItems = $('div.setup-panel div a'),
            allWells = $('.setup-content'),
            allNextBtn = $('.nextBtn');

    allWells.hide();

    navListItems.click(function (e) {
        e.preventDefault();
        var $target = $($(this).attr('href')),
                $item = $(this);

        if (!$item.hasClass('disabled')) {
            navListItems.removeClass('btn-primary').addClass('btn-default');
            $item.addClass('btn-primary');
            allWells.hide();
            $target.show();
            $target.find('input:eq(0)').focus();
        }
    });

    allNextBtn.click(function(){
        var curStep = $(this).closest(".setup-content"),
            curStepBtn = curStep.attr("id"),
            nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
            curInputs = curStep.find("input[type='text'],input[type='url']"),
            isValid = true;

        $(".form-group").removeClass("has-error");
        for(var i=0; i<curInputs.length; i++){
            if (!curInputs[i].validity.valid){
                isValid = false;
                $(curInputs[i]).closest(".form-group").addClass("has-error");
            }
        }

        if (isValid)
            nextStepWizard.removeAttr('disabled').trigger('click');
    });

    $('div.setup-panel div a.btn-primary').trigger('click');
});




setInterval(function() {
   
    let arr = JSON.parse(localStorage.getItem('userData'));
    console.log(arr);
    arr.forEach((user, id) => {
        var customername = user.customer.name;
        var customerphone = user.customer.phone;
        var action =user.action;
        var token = user.token;
        var user_id= user.user_id;
        var station_id = user.station_id;
        var date = user.date;
        var time = user.time;
        var shift_id = user.shift_id;
        var items_product_id= user.items[0].product_id;
        var items_dispenser_id= user.items[0].dispenser_id;
        var items_rate= user.items[0].rate;
        var items_quantity= user.items[0].quantity;
        var items_amount= user.items[0].amount;
        var payments_method= user.payments[0].method;
        var payments_account_id= user.payments[0].account_id;
        var payments_amount= user.payments[0].amount;
        var total= user.total;
        var paid = user.paid;
        var change = user.change;


        var json = { 
            "action": action,
            "user_id": user_id,
            "station_id": station_id,
            "token": token,
            "date": date,
            "time": time,
            "invoice": "",
            "shift_id": shift_id,
            "customer": {
                "phone": customerphone,
                "name": customername,
            },
            "items": [
                {
                    "product_id": items_product_id,
                    "dispenser_id": items_dispenser_id,
                    "rate": items_rate,
                    "quantity": items_quantity,
                    "amount": items_amount
                }
            ],
            "payments": [
                {
                    "method": payments_method,
                    "account_id":payments_account_id,
                    "amount": payments_amount
                }
            ],
            "total": total,
            "paid": paid,
            "change": change




         };
        $.ajax({
            
            type: "POST",
            url: "https://demo.station.cloud-sync.biz/api/pos.php",
            // The key needs to match your method's input parameter (case-sensitive).
            data: JSON.stringify(json),
            contentType: "application/json; charset=utf-8",
            success:  function(data){
                localStorage.clear('userData');
                let arr = [];
        let arrData = {
            action: "retail_sales_post",
            user_id: 41,
            station_id: 14,
            token: "411676438756sFyL4Ntbdo9PvYjOhQq86WuEBi53VnmZIzJX1R",
            date: "2023-01-24",
            time: "12:19",
            invoice: "",
            shift_id:  	257725,
           customer: {
                name:"",
                phone: "",
             }
    ,      items: [
          {
            product_id: 461,
            dispenser_id: 298,
            rate: 150.00,
            quantity: quantity,
            amount: amount
          }
    ],
    payments: [
        {
            method: "",
            account_id: 1324,
            amount: 1000.00
        }
    ],
    total: 600.00,
    paid: 1000.00,
    change: 400.00
};
        arr.push(arrData);
        localStorage.setItem('userData', JSON.stringify(arr));
        console.log("data pushed successfully ");
                Noti({
                    status: 'success',
                    content: 'Sales has been uploaded succesfull',
                    timer: 2000,
                    animation: true,
                    progress: true,
                    bgcolor: 'linear-gradient(60deg,#00ad34,#0ee4c7)',
                    icon: 'show'
                });
            },
            error: function(errMsg) {
                alert("Not working");
            }
        });
    })
    }

, 50000);